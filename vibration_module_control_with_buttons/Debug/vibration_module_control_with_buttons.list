
vibration_module_control_with_buttons.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000b74  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000d1c  08000d1c  0002000c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000d1c  08000d1c  0002000c  2**0
                  CONTENTS
  4 .ARM          00000000  08000d1c  08000d1c  0002000c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000d1c  08000d1c  0002000c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000d1c  08000d1c  00010d1c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000d20  08000d20  00010d20  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000000c  20000000  08000d24  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002000c  2**0
                  CONTENTS
 10 .bss          00000030  2000000c  2000000c  0002000c  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000003c  2000003c  0002000c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0002000c  2**0
                  CONTENTS, READONLY
 13 .debug_info   000019ea  00000000  00000000  0002003c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000648  00000000  00000000  00021a26  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000170  00000000  00000000  00022070  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000128  00000000  00000000  000221e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000018bb  00000000  00000000  00022308  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000160c  00000000  00000000  00023bc3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005f0a  00000000  00000000  000251cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002b0d9  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000490  00000000  00000000  0002b12c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	2000000c 	.word	0x2000000c
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000d04 	.word	0x08000d04

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000010 	.word	0x20000010
 80001e4:	08000d04 	.word	0x08000d04

080001e8 <nvic_irqno_enable>:
#include "coreM4.h"

static volatile clock_t tmTickCount;


void nvic_irqno_enable(uint8_t irq_num){
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	4603      	mov	r3, r0
 80001f0:	71fb      	strb	r3, [r7, #7]
	if(irq_num < 32)
 80001f2:	79fb      	ldrb	r3, [r7, #7]
 80001f4:	2b1f      	cmp	r3, #31
 80001f6:	d809      	bhi.n	800020c <nvic_irqno_enable+0x24>
		NVIC_ISERx->NVIC_ISER0 |= (1U<<irq_num );
 80001f8:	4b16      	ldr	r3, [pc, #88]	; (8000254 <nvic_irqno_enable+0x6c>)
 80001fa:	681a      	ldr	r2, [r3, #0]
 80001fc:	79fb      	ldrb	r3, [r7, #7]
 80001fe:	2101      	movs	r1, #1
 8000200:	fa01 f303 	lsl.w	r3, r1, r3
 8000204:	4913      	ldr	r1, [pc, #76]	; (8000254 <nvic_irqno_enable+0x6c>)
 8000206:	4313      	orrs	r3, r2
 8000208:	600b      	str	r3, [r1, #0]
	else if( irq_num < 64)
		NVIC_ISERx->NVIC_ISER1 |= (1U<<(irq_num%32));
	else if(irq_num <= 81)
		NVIC_ISERx->NVIC_ISER2 |= (1U<<(irq_num%32));

}
 800020a:	e01c      	b.n	8000246 <nvic_irqno_enable+0x5e>
	else if( irq_num < 64)
 800020c:	79fb      	ldrb	r3, [r7, #7]
 800020e:	2b3f      	cmp	r3, #63	; 0x3f
 8000210:	d80b      	bhi.n	800022a <nvic_irqno_enable+0x42>
		NVIC_ISERx->NVIC_ISER1 |= (1U<<(irq_num%32));
 8000212:	4b10      	ldr	r3, [pc, #64]	; (8000254 <nvic_irqno_enable+0x6c>)
 8000214:	685a      	ldr	r2, [r3, #4]
 8000216:	79fb      	ldrb	r3, [r7, #7]
 8000218:	f003 031f 	and.w	r3, r3, #31
 800021c:	2101      	movs	r1, #1
 800021e:	fa01 f303 	lsl.w	r3, r1, r3
 8000222:	490c      	ldr	r1, [pc, #48]	; (8000254 <nvic_irqno_enable+0x6c>)
 8000224:	4313      	orrs	r3, r2
 8000226:	604b      	str	r3, [r1, #4]
}
 8000228:	e00d      	b.n	8000246 <nvic_irqno_enable+0x5e>
	else if(irq_num <= 81)
 800022a:	79fb      	ldrb	r3, [r7, #7]
 800022c:	2b51      	cmp	r3, #81	; 0x51
 800022e:	d80a      	bhi.n	8000246 <nvic_irqno_enable+0x5e>
		NVIC_ISERx->NVIC_ISER2 |= (1U<<(irq_num%32));
 8000230:	4b08      	ldr	r3, [pc, #32]	; (8000254 <nvic_irqno_enable+0x6c>)
 8000232:	689a      	ldr	r2, [r3, #8]
 8000234:	79fb      	ldrb	r3, [r7, #7]
 8000236:	f003 031f 	and.w	r3, r3, #31
 800023a:	2101      	movs	r1, #1
 800023c:	fa01 f303 	lsl.w	r3, r1, r3
 8000240:	4904      	ldr	r1, [pc, #16]	; (8000254 <nvic_irqno_enable+0x6c>)
 8000242:	4313      	orrs	r3, r2
 8000244:	608b      	str	r3, [r1, #8]
}
 8000246:	bf00      	nop
 8000248:	370c      	adds	r7, #12
 800024a:	46bd      	mov	sp, r7
 800024c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000250:	4770      	bx	lr
 8000252:	bf00      	nop
 8000254:	e000e100 	.word	0xe000e100

08000258 <systick_config>:
		NVIC_ICERx->NVIC_ICER2 |= (1U<<(irq_num%32));
}



void systick_config(uint32_t tick){
 8000258:	b480      	push	{r7}
 800025a:	b083      	sub	sp, #12
 800025c:	af00      	add	r7, sp, #0
 800025e:	6078      	str	r0, [r7, #4]
	//1-Program reload value
	//2-Clear current value
	//3-Program Control and Status register

	SYSTIC->SYST_RVR= tick -1;
 8000260:	4a0f      	ldr	r2, [pc, #60]	; (80002a0 <systick_config+0x48>)
 8000262:	687b      	ldr	r3, [r7, #4]
 8000264:	3b01      	subs	r3, #1
 8000266:	6053      	str	r3, [r2, #4]
	SYSTIC->SYST_CVR= 0;
 8000268:	4b0d      	ldr	r3, [pc, #52]	; (80002a0 <systick_config+0x48>)
 800026a:	2200      	movs	r2, #0
 800026c:	609a      	str	r2, [r3, #8]
	SYSTIC->SYST_CSR |= (1U<<2);
 800026e:	4b0c      	ldr	r3, [pc, #48]	; (80002a0 <systick_config+0x48>)
 8000270:	681b      	ldr	r3, [r3, #0]
 8000272:	4a0b      	ldr	r2, [pc, #44]	; (80002a0 <systick_config+0x48>)
 8000274:	f043 0304 	orr.w	r3, r3, #4
 8000278:	6013      	str	r3, [r2, #0]
	SYSTIC->SYST_CSR |= (1U<<1);
 800027a:	4b09      	ldr	r3, [pc, #36]	; (80002a0 <systick_config+0x48>)
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	4a08      	ldr	r2, [pc, #32]	; (80002a0 <systick_config+0x48>)
 8000280:	f043 0302 	orr.w	r3, r3, #2
 8000284:	6013      	str	r3, [r2, #0]
	SYSTIC->SYST_CSR |= (1U<<0); //COUNTER ENABLE
 8000286:	4b06      	ldr	r3, [pc, #24]	; (80002a0 <systick_config+0x48>)
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	4a05      	ldr	r2, [pc, #20]	; (80002a0 <systick_config+0x48>)
 800028c:	f043 0301 	orr.w	r3, r3, #1
 8000290:	6013      	str	r3, [r2, #0]

}
 8000292:	bf00      	nop
 8000294:	370c      	adds	r7, #12
 8000296:	46bd      	mov	sp, r7
 8000298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop
 80002a0:	e000e010 	.word	0xe000e010

080002a4 <gpio_perip_en>:
 */
#include "gpio.h"



PRIVATE void gpio_perip_en(GPIO_RegDef_t * pGpiox){
 80002a4:	b480      	push	{r7}
 80002a6:	b083      	sub	sp, #12
 80002a8:	af00      	add	r7, sp, #0
 80002aa:	6078      	str	r0, [r7, #4]
	if(pGpiox==GPIOA)
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	4a33      	ldr	r2, [pc, #204]	; (800037c <gpio_perip_en+0xd8>)
 80002b0:	4293      	cmp	r3, r2
 80002b2:	d106      	bne.n	80002c2 <gpio_perip_en+0x1e>
		GPIOA_CLOCK_ENABLE();
 80002b4:	4b32      	ldr	r3, [pc, #200]	; (8000380 <gpio_perip_en+0xdc>)
 80002b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b8:	4a31      	ldr	r2, [pc, #196]	; (8000380 <gpio_perip_en+0xdc>)
 80002ba:	f043 0301 	orr.w	r3, r3, #1
 80002be:	6313      	str	r3, [r2, #48]	; 0x30
		GPIOG_CLOCK_ENABLE();
	else if(pGpiox==GPIOH)
		GPIOH_CLOCK_ENABLE();
	else if(pGpiox==GPIOI)
		GPIOI_CLOCK_ENABLE();
}
 80002c0:	e056      	b.n	8000370 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOB)
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	4a2f      	ldr	r2, [pc, #188]	; (8000384 <gpio_perip_en+0xe0>)
 80002c6:	4293      	cmp	r3, r2
 80002c8:	d106      	bne.n	80002d8 <gpio_perip_en+0x34>
		GPIOB_CLOCK_ENABLE();
 80002ca:	4b2d      	ldr	r3, [pc, #180]	; (8000380 <gpio_perip_en+0xdc>)
 80002cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ce:	4a2c      	ldr	r2, [pc, #176]	; (8000380 <gpio_perip_en+0xdc>)
 80002d0:	f043 0302 	orr.w	r3, r3, #2
 80002d4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d6:	e04b      	b.n	8000370 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOC)
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	4a2b      	ldr	r2, [pc, #172]	; (8000388 <gpio_perip_en+0xe4>)
 80002dc:	4293      	cmp	r3, r2
 80002de:	d106      	bne.n	80002ee <gpio_perip_en+0x4a>
		GPIOC_CLOCK_ENABLE();
 80002e0:	4b27      	ldr	r3, [pc, #156]	; (8000380 <gpio_perip_en+0xdc>)
 80002e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e4:	4a26      	ldr	r2, [pc, #152]	; (8000380 <gpio_perip_en+0xdc>)
 80002e6:	f043 0304 	orr.w	r3, r3, #4
 80002ea:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ec:	e040      	b.n	8000370 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOD)
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	4a26      	ldr	r2, [pc, #152]	; (800038c <gpio_perip_en+0xe8>)
 80002f2:	4293      	cmp	r3, r2
 80002f4:	d106      	bne.n	8000304 <gpio_perip_en+0x60>
		GPIOD_CLOCK_ENABLE();
 80002f6:	4b22      	ldr	r3, [pc, #136]	; (8000380 <gpio_perip_en+0xdc>)
 80002f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002fa:	4a21      	ldr	r2, [pc, #132]	; (8000380 <gpio_perip_en+0xdc>)
 80002fc:	f043 0308 	orr.w	r3, r3, #8
 8000300:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000302:	e035      	b.n	8000370 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOE)
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	4a22      	ldr	r2, [pc, #136]	; (8000390 <gpio_perip_en+0xec>)
 8000308:	4293      	cmp	r3, r2
 800030a:	d106      	bne.n	800031a <gpio_perip_en+0x76>
		GPIOE_CLOCK_ENABLE();
 800030c:	4b1c      	ldr	r3, [pc, #112]	; (8000380 <gpio_perip_en+0xdc>)
 800030e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000310:	4a1b      	ldr	r2, [pc, #108]	; (8000380 <gpio_perip_en+0xdc>)
 8000312:	f043 0310 	orr.w	r3, r3, #16
 8000316:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000318:	e02a      	b.n	8000370 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOF)
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	4a1d      	ldr	r2, [pc, #116]	; (8000394 <gpio_perip_en+0xf0>)
 800031e:	4293      	cmp	r3, r2
 8000320:	d106      	bne.n	8000330 <gpio_perip_en+0x8c>
		GPIOF_CLOCK_ENABLE();
 8000322:	4b17      	ldr	r3, [pc, #92]	; (8000380 <gpio_perip_en+0xdc>)
 8000324:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000326:	4a16      	ldr	r2, [pc, #88]	; (8000380 <gpio_perip_en+0xdc>)
 8000328:	f043 0320 	orr.w	r3, r3, #32
 800032c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800032e:	e01f      	b.n	8000370 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOG)
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	4a19      	ldr	r2, [pc, #100]	; (8000398 <gpio_perip_en+0xf4>)
 8000334:	4293      	cmp	r3, r2
 8000336:	d106      	bne.n	8000346 <gpio_perip_en+0xa2>
		GPIOG_CLOCK_ENABLE();
 8000338:	4b11      	ldr	r3, [pc, #68]	; (8000380 <gpio_perip_en+0xdc>)
 800033a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033c:	4a10      	ldr	r2, [pc, #64]	; (8000380 <gpio_perip_en+0xdc>)
 800033e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000342:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000344:	e014      	b.n	8000370 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOH)
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	4a14      	ldr	r2, [pc, #80]	; (800039c <gpio_perip_en+0xf8>)
 800034a:	4293      	cmp	r3, r2
 800034c:	d106      	bne.n	800035c <gpio_perip_en+0xb8>
		GPIOH_CLOCK_ENABLE();
 800034e:	4b0c      	ldr	r3, [pc, #48]	; (8000380 <gpio_perip_en+0xdc>)
 8000350:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000352:	4a0b      	ldr	r2, [pc, #44]	; (8000380 <gpio_perip_en+0xdc>)
 8000354:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000358:	6313      	str	r3, [r2, #48]	; 0x30
}
 800035a:	e009      	b.n	8000370 <gpio_perip_en+0xcc>
	else if(pGpiox==GPIOI)
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	4a10      	ldr	r2, [pc, #64]	; (80003a0 <gpio_perip_en+0xfc>)
 8000360:	4293      	cmp	r3, r2
 8000362:	d105      	bne.n	8000370 <gpio_perip_en+0xcc>
		GPIOI_CLOCK_ENABLE();
 8000364:	4b06      	ldr	r3, [pc, #24]	; (8000380 <gpio_perip_en+0xdc>)
 8000366:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000368:	4a05      	ldr	r2, [pc, #20]	; (8000380 <gpio_perip_en+0xdc>)
 800036a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800036e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000370:	bf00      	nop
 8000372:	370c      	adds	r7, #12
 8000374:	46bd      	mov	sp, r7
 8000376:	f85d 7b04 	ldr.w	r7, [sp], #4
 800037a:	4770      	bx	lr
 800037c:	40020000 	.word	0x40020000
 8000380:	40023800 	.word	0x40023800
 8000384:	40020400 	.word	0x40020400
 8000388:	40020800 	.word	0x40020800
 800038c:	40020c00 	.word	0x40020c00
 8000390:	40021000 	.word	0x40021000
 8000394:	40021400 	.word	0x40021400
 8000398:	40021800 	.word	0x40021800
 800039c:	40021c00 	.word	0x40021c00
 80003a0:	40022000 	.word	0x40022000

080003a4 <get_port_code>:


PRIVATE uint8_t get_port_code(const GPIO_RegDef_t * pGpioX){
 80003a4:	b480      	push	{r7}
 80003a6:	b083      	sub	sp, #12
 80003a8:	af00      	add	r7, sp, #0
 80003aa:	6078      	str	r0, [r7, #4]
	if(pGpioX==GPIOA)
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	4a1d      	ldr	r2, [pc, #116]	; (8000424 <get_port_code+0x80>)
 80003b0:	4293      	cmp	r3, r2
 80003b2:	d101      	bne.n	80003b8 <get_port_code+0x14>
		return GPIOA_PORT_CODE;
 80003b4:	2300      	movs	r3, #0
 80003b6:	e02f      	b.n	8000418 <get_port_code+0x74>
	else if(pGpioX==GPIOB)
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	4a1b      	ldr	r2, [pc, #108]	; (8000428 <get_port_code+0x84>)
 80003bc:	4293      	cmp	r3, r2
 80003be:	d101      	bne.n	80003c4 <get_port_code+0x20>
		return GPIOB_PORT_CODE;
 80003c0:	2301      	movs	r3, #1
 80003c2:	e029      	b.n	8000418 <get_port_code+0x74>
	else if(pGpioX==GPIOC)
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	4a19      	ldr	r2, [pc, #100]	; (800042c <get_port_code+0x88>)
 80003c8:	4293      	cmp	r3, r2
 80003ca:	d101      	bne.n	80003d0 <get_port_code+0x2c>
		return GPIOC_PORT_CODE;
 80003cc:	2302      	movs	r3, #2
 80003ce:	e023      	b.n	8000418 <get_port_code+0x74>
	else if(pGpioX==GPIOD)
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	4a17      	ldr	r2, [pc, #92]	; (8000430 <get_port_code+0x8c>)
 80003d4:	4293      	cmp	r3, r2
 80003d6:	d101      	bne.n	80003dc <get_port_code+0x38>
		return GPIOD_PORT_CODE;
 80003d8:	2303      	movs	r3, #3
 80003da:	e01d      	b.n	8000418 <get_port_code+0x74>
	else if(pGpioX==GPIOE)
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	4a15      	ldr	r2, [pc, #84]	; (8000434 <get_port_code+0x90>)
 80003e0:	4293      	cmp	r3, r2
 80003e2:	d101      	bne.n	80003e8 <get_port_code+0x44>
		return GPIOE_PORT_CODE;
 80003e4:	2304      	movs	r3, #4
 80003e6:	e017      	b.n	8000418 <get_port_code+0x74>
	else if(pGpioX==GPIOF)
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	4a13      	ldr	r2, [pc, #76]	; (8000438 <get_port_code+0x94>)
 80003ec:	4293      	cmp	r3, r2
 80003ee:	d101      	bne.n	80003f4 <get_port_code+0x50>
		return GPIOF_PORT_CODE;
 80003f0:	2305      	movs	r3, #5
 80003f2:	e011      	b.n	8000418 <get_port_code+0x74>
	else if(pGpioX==GPIOG)
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	4a11      	ldr	r2, [pc, #68]	; (800043c <get_port_code+0x98>)
 80003f8:	4293      	cmp	r3, r2
 80003fa:	d101      	bne.n	8000400 <get_port_code+0x5c>
		return GPIOG_PORT_CODE;
 80003fc:	2306      	movs	r3, #6
 80003fe:	e00b      	b.n	8000418 <get_port_code+0x74>
	else if(pGpioX==GPIOH)
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	4a0f      	ldr	r2, [pc, #60]	; (8000440 <get_port_code+0x9c>)
 8000404:	4293      	cmp	r3, r2
 8000406:	d101      	bne.n	800040c <get_port_code+0x68>
		return GPIOH_PORT_CODE;
 8000408:	2307      	movs	r3, #7
 800040a:	e005      	b.n	8000418 <get_port_code+0x74>
	else if(pGpioX==GPIOI)
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	4a0d      	ldr	r2, [pc, #52]	; (8000444 <get_port_code+0xa0>)
 8000410:	4293      	cmp	r3, r2
 8000412:	d101      	bne.n	8000418 <get_port_code+0x74>
		return GPIOI_PORT_CODE;
 8000414:	2308      	movs	r3, #8
 8000416:	e7ff      	b.n	8000418 <get_port_code+0x74>
}
 8000418:	4618      	mov	r0, r3
 800041a:	370c      	adds	r7, #12
 800041c:	46bd      	mov	sp, r7
 800041e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000422:	4770      	bx	lr
 8000424:	40020000 	.word	0x40020000
 8000428:	40020400 	.word	0x40020400
 800042c:	40020800 	.word	0x40020800
 8000430:	40020c00 	.word	0x40020c00
 8000434:	40021000 	.word	0x40021000
 8000438:	40021400 	.word	0x40021400
 800043c:	40021800 	.word	0x40021800
 8000440:	40021c00 	.word	0x40021c00
 8000444:	40022000 	.word	0x40022000

08000448 <gpio_init>:

void gpio_init(GPIO_Handle_t * pGpio_handle){
 8000448:	b580      	push	{r7, lr}
 800044a:	b086      	sub	sp, #24
 800044c:	af00      	add	r7, sp, #0
 800044e:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 8000450:	2300      	movs	r3, #0
 8000452:	617b      	str	r3, [r7, #20]

	//clock aktif et
	gpio_perip_en(pGpio_handle->pGpioX);
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	4618      	mov	r0, r3
 800045a:	f7ff ff23 	bl	80002a4 <gpio_perip_en>
	volatile uint32_t * p_rcc_ahb1_reg=(uint32_t*)(0x40023800+0x30);
	*p_rcc_ahb1_reg |=(1u<<3);
*/

	//pin mode ayarla
	if(pGpio_handle->gPIO_pinConfig.pin_mode<=GPIO_MODE_ANALOG){
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	795b      	ldrb	r3, [r3, #5]
 8000462:	2b03      	cmp	r3, #3
 8000464:	d820      	bhi.n	80004a8 <gpio_init+0x60>
		temp = (pGpio_handle->gPIO_pinConfig.pin_mode << (2 * pGpio_handle->gPIO_pinConfig.pin_number));
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	795b      	ldrb	r3, [r3, #5]
 800046a:	461a      	mov	r2, r3
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	791b      	ldrb	r3, [r3, #4]
 8000470:	005b      	lsls	r3, r3, #1
 8000472:	fa02 f303 	lsl.w	r3, r2, r3
 8000476:	617b      	str	r3, [r7, #20]
		pGpio_handle->pGpioX->MODER &= ~(0b11<<(2*pGpio_handle->gPIO_pinConfig.pin_number));
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	681a      	ldr	r2, [r3, #0]
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	791b      	ldrb	r3, [r3, #4]
 8000482:	005b      	lsls	r3, r3, #1
 8000484:	2103      	movs	r1, #3
 8000486:	fa01 f303 	lsl.w	r3, r1, r3
 800048a:	43db      	mvns	r3, r3
 800048c:	4619      	mov	r1, r3
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	681b      	ldr	r3, [r3, #0]
 8000492:	400a      	ands	r2, r1
 8000494:	601a      	str	r2, [r3, #0]
		pGpio_handle->pGpioX->MODER |=temp;
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	6819      	ldr	r1, [r3, #0]
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	681b      	ldr	r3, [r3, #0]
 80004a0:	697a      	ldr	r2, [r7, #20]
 80004a2:	430a      	orrs	r2, r1
 80004a4:	601a      	str	r2, [r3, #0]
 80004a6:	e07c      	b.n	80005a2 <gpio_init+0x15a>
	}else{
		//interrupt mode
		if(pGpio_handle->gPIO_pinConfig.pin_mode==GPIO_MODE_FE_IT) //Only falling
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	795b      	ldrb	r3, [r3, #5]
 80004ac:	2b04      	cmp	r3, #4
 80004ae:	d115      	bne.n	80004dc <gpio_init+0x94>
		{
			EXTI->FTSR |= (1U<<pGpio_handle->gPIO_pinConfig.pin_number); //falling set
 80004b0:	4b88      	ldr	r3, [pc, #544]	; (80006d4 <gpio_init+0x28c>)
 80004b2:	68da      	ldr	r2, [r3, #12]
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	791b      	ldrb	r3, [r3, #4]
 80004b8:	4619      	mov	r1, r3
 80004ba:	2301      	movs	r3, #1
 80004bc:	408b      	lsls	r3, r1
 80004be:	4985      	ldr	r1, [pc, #532]	; (80006d4 <gpio_init+0x28c>)
 80004c0:	4313      	orrs	r3, r2
 80004c2:	60cb      	str	r3, [r1, #12]
			EXTI->RTSR &= ~(1U<<pGpio_handle->gPIO_pinConfig.pin_number);//rising reset
 80004c4:	4b83      	ldr	r3, [pc, #524]	; (80006d4 <gpio_init+0x28c>)
 80004c6:	689a      	ldr	r2, [r3, #8]
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	791b      	ldrb	r3, [r3, #4]
 80004cc:	4619      	mov	r1, r3
 80004ce:	2301      	movs	r3, #1
 80004d0:	408b      	lsls	r3, r1
 80004d2:	43db      	mvns	r3, r3
 80004d4:	497f      	ldr	r1, [pc, #508]	; (80006d4 <gpio_init+0x28c>)
 80004d6:	4013      	ands	r3, r2
 80004d8:	608b      	str	r3, [r1, #8]
 80004da:	e031      	b.n	8000540 <gpio_init+0xf8>
		}
		else if(pGpio_handle->gPIO_pinConfig.pin_mode==GPIO_MODE_RE_IT) // only rising
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	795b      	ldrb	r3, [r3, #5]
 80004e0:	2b05      	cmp	r3, #5
 80004e2:	d115      	bne.n	8000510 <gpio_init+0xc8>
		{
			EXTI->RTSR |= (1U<<pGpio_handle->gPIO_pinConfig.pin_number);//rising set
 80004e4:	4b7b      	ldr	r3, [pc, #492]	; (80006d4 <gpio_init+0x28c>)
 80004e6:	689a      	ldr	r2, [r3, #8]
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	791b      	ldrb	r3, [r3, #4]
 80004ec:	4619      	mov	r1, r3
 80004ee:	2301      	movs	r3, #1
 80004f0:	408b      	lsls	r3, r1
 80004f2:	4978      	ldr	r1, [pc, #480]	; (80006d4 <gpio_init+0x28c>)
 80004f4:	4313      	orrs	r3, r2
 80004f6:	608b      	str	r3, [r1, #8]
			EXTI->FTSR &= ~(1U<<pGpio_handle->gPIO_pinConfig.pin_number);//falling reset
 80004f8:	4b76      	ldr	r3, [pc, #472]	; (80006d4 <gpio_init+0x28c>)
 80004fa:	68da      	ldr	r2, [r3, #12]
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	791b      	ldrb	r3, [r3, #4]
 8000500:	4619      	mov	r1, r3
 8000502:	2301      	movs	r3, #1
 8000504:	408b      	lsls	r3, r1
 8000506:	43db      	mvns	r3, r3
 8000508:	4972      	ldr	r1, [pc, #456]	; (80006d4 <gpio_init+0x28c>)
 800050a:	4013      	ands	r3, r2
 800050c:	60cb      	str	r3, [r1, #12]
 800050e:	e017      	b.n	8000540 <gpio_init+0xf8>
		}
		else if(pGpio_handle->gPIO_pinConfig.pin_mode==GPIO_MODE_FRE_IT) // falling + rising
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	795b      	ldrb	r3, [r3, #5]
 8000514:	2b06      	cmp	r3, #6
 8000516:	d113      	bne.n	8000540 <gpio_init+0xf8>
		{
			EXTI->RTSR |= (1U <<pGpio_handle->gPIO_pinConfig.pin_number); //rising set
 8000518:	4b6e      	ldr	r3, [pc, #440]	; (80006d4 <gpio_init+0x28c>)
 800051a:	689a      	ldr	r2, [r3, #8]
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	791b      	ldrb	r3, [r3, #4]
 8000520:	4619      	mov	r1, r3
 8000522:	2301      	movs	r3, #1
 8000524:	408b      	lsls	r3, r1
 8000526:	496b      	ldr	r1, [pc, #428]	; (80006d4 <gpio_init+0x28c>)
 8000528:	4313      	orrs	r3, r2
 800052a:	608b      	str	r3, [r1, #8]
			EXTI->FTSR |= (1U <<pGpio_handle->gPIO_pinConfig.pin_number); //falling set
 800052c:	4b69      	ldr	r3, [pc, #420]	; (80006d4 <gpio_init+0x28c>)
 800052e:	68da      	ldr	r2, [r3, #12]
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	791b      	ldrb	r3, [r3, #4]
 8000534:	4619      	mov	r1, r3
 8000536:	2301      	movs	r3, #1
 8000538:	408b      	lsls	r3, r1
 800053a:	4966      	ldr	r1, [pc, #408]	; (80006d4 <gpio_init+0x28c>)
 800053c:	4313      	orrs	r3, r2
 800053e:	60cb      	str	r3, [r1, #12]
		}
		//used port pin selection by SYSCF_EXTICRx
		SYSCFG_CLOCK_ENABLE();
 8000540:	4b65      	ldr	r3, [pc, #404]	; (80006d8 <gpio_init+0x290>)
 8000542:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000544:	4a64      	ldr	r2, [pc, #400]	; (80006d8 <gpio_init+0x290>)
 8000546:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800054a:	6453      	str	r3, [r2, #68]	; 0x44
		uint32_t syscfgr_exti_reg_no = pGpio_handle->gPIO_pinConfig.pin_number / 4;
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	791b      	ldrb	r3, [r3, #4]
 8000550:	089b      	lsrs	r3, r3, #2
 8000552:	b2db      	uxtb	r3, r3
 8000554:	613b      	str	r3, [r7, #16]
		uint32_t syscfgr_exti_reg_bit_no = pGpio_handle->gPIO_pinConfig.pin_number % 4;
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	791b      	ldrb	r3, [r3, #4]
 800055a:	f003 0303 	and.w	r3, r3, #3
 800055e:	60fb      	str	r3, [r7, #12]
		uint8_t port_code = get_port_code(pGpio_handle->pGpioX);
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	681b      	ldr	r3, [r3, #0]
 8000564:	4618      	mov	r0, r3
 8000566:	f7ff ff1d 	bl	80003a4 <get_port_code>
 800056a:	4603      	mov	r3, r0
 800056c:	72fb      	strb	r3, [r7, #11]
		SYSCFG->EXTICR[syscfgr_exti_reg_no] |= (port_code<<(syscfgr_exti_reg_bit_no*4));
 800056e:	4a5b      	ldr	r2, [pc, #364]	; (80006dc <gpio_init+0x294>)
 8000570:	693b      	ldr	r3, [r7, #16]
 8000572:	3302      	adds	r3, #2
 8000574:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000578:	7af9      	ldrb	r1, [r7, #11]
 800057a:	68fa      	ldr	r2, [r7, #12]
 800057c:	0092      	lsls	r2, r2, #2
 800057e:	fa01 f202 	lsl.w	r2, r1, r2
 8000582:	4956      	ldr	r1, [pc, #344]	; (80006dc <gpio_init+0x294>)
 8000584:	431a      	orrs	r2, r3
 8000586:	693b      	ldr	r3, [r7, #16]
 8000588:	3302      	adds	r3, #2
 800058a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		//Enable IMR
		EXTI->IMR |= (1u<<pGpio_handle->gPIO_pinConfig.pin_number);
 800058e:	4b51      	ldr	r3, [pc, #324]	; (80006d4 <gpio_init+0x28c>)
 8000590:	681a      	ldr	r2, [r3, #0]
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	791b      	ldrb	r3, [r3, #4]
 8000596:	4619      	mov	r1, r3
 8000598:	2301      	movs	r3, #1
 800059a:	408b      	lsls	r3, r1
 800059c:	494d      	ldr	r1, [pc, #308]	; (80006d4 <gpio_init+0x28c>)
 800059e:	4313      	orrs	r3, r2
 80005a0:	600b      	str	r3, [r1, #0]
		//NVIC
	}

	//speed ayarla
	temp = (pGpio_handle->gPIO_pinConfig.pin_speed << (2 * pGpio_handle->gPIO_pinConfig.pin_number));
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	799b      	ldrb	r3, [r3, #6]
 80005a6:	461a      	mov	r2, r3
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	791b      	ldrb	r3, [r3, #4]
 80005ac:	005b      	lsls	r3, r3, #1
 80005ae:	fa02 f303 	lsl.w	r3, r2, r3
 80005b2:	617b      	str	r3, [r7, #20]
	pGpio_handle->pGpioX->OSPEEDR &= ~(0b11<<(2*pGpio_handle->gPIO_pinConfig.pin_number));
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	689a      	ldr	r2, [r3, #8]
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	791b      	ldrb	r3, [r3, #4]
 80005be:	005b      	lsls	r3, r3, #1
 80005c0:	2103      	movs	r1, #3
 80005c2:	fa01 f303 	lsl.w	r3, r1, r3
 80005c6:	43db      	mvns	r3, r3
 80005c8:	4619      	mov	r1, r3
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	681b      	ldr	r3, [r3, #0]
 80005ce:	400a      	ands	r2, r1
 80005d0:	609a      	str	r2, [r3, #8]
	pGpio_handle->pGpioX->OSPEEDR |=temp;
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	6899      	ldr	r1, [r3, #8]
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	697a      	ldr	r2, [r7, #20]
 80005de:	430a      	orrs	r2, r1
 80005e0:	609a      	str	r2, [r3, #8]

	//pull up pull down ayarla
	temp = (pGpio_handle->gPIO_pinConfig.pin_pupd << (2 * pGpio_handle->gPIO_pinConfig.pin_number));
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	7a1b      	ldrb	r3, [r3, #8]
 80005e6:	461a      	mov	r2, r3
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	791b      	ldrb	r3, [r3, #4]
 80005ec:	005b      	lsls	r3, r3, #1
 80005ee:	fa02 f303 	lsl.w	r3, r2, r3
 80005f2:	617b      	str	r3, [r7, #20]
	pGpio_handle->pGpioX->PUPDR &= ~(0b11<<(2*pGpio_handle->gPIO_pinConfig.pin_number));
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	68da      	ldr	r2, [r3, #12]
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	791b      	ldrb	r3, [r3, #4]
 80005fe:	005b      	lsls	r3, r3, #1
 8000600:	2103      	movs	r1, #3
 8000602:	fa01 f303 	lsl.w	r3, r1, r3
 8000606:	43db      	mvns	r3, r3
 8000608:	4619      	mov	r1, r3
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	681b      	ldr	r3, [r3, #0]
 800060e:	400a      	ands	r2, r1
 8000610:	60da      	str	r2, [r3, #12]
	pGpio_handle->pGpioX->PUPDR |=temp;
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	681b      	ldr	r3, [r3, #0]
 8000616:	68d9      	ldr	r1, [r3, #12]
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	681b      	ldr	r3, [r3, #0]
 800061c:	697a      	ldr	r2, [r7, #20]
 800061e:	430a      	orrs	r2, r1
 8000620:	60da      	str	r2, [r3, #12]

	//otype ayarla
	temp = (pGpio_handle->gPIO_pinConfig.pin_otype << (pGpio_handle->gPIO_pinConfig.pin_number));
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	79db      	ldrb	r3, [r3, #7]
 8000626:	461a      	mov	r2, r3
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	791b      	ldrb	r3, [r3, #4]
 800062c:	fa02 f303 	lsl.w	r3, r2, r3
 8000630:	617b      	str	r3, [r7, #20]
	pGpio_handle->pGpioX->OTYPER &= ~(0b1<<(pGpio_handle->gPIO_pinConfig.pin_number));
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	681b      	ldr	r3, [r3, #0]
 8000636:	685a      	ldr	r2, [r3, #4]
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	791b      	ldrb	r3, [r3, #4]
 800063c:	4619      	mov	r1, r3
 800063e:	2301      	movs	r3, #1
 8000640:	408b      	lsls	r3, r1
 8000642:	43db      	mvns	r3, r3
 8000644:	4619      	mov	r1, r3
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	681b      	ldr	r3, [r3, #0]
 800064a:	400a      	ands	r2, r1
 800064c:	605a      	str	r2, [r3, #4]
	pGpio_handle->pGpioX->OTYPER |=temp;
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	681b      	ldr	r3, [r3, #0]
 8000652:	6859      	ldr	r1, [r3, #4]
 8000654:	687b      	ldr	r3, [r7, #4]
 8000656:	681b      	ldr	r3, [r3, #0]
 8000658:	697a      	ldr	r2, [r7, #20]
 800065a:	430a      	orrs	r2, r1
 800065c:	605a      	str	r2, [r3, #4]

	//alternate func mode --ilerde
	if(pGpio_handle->gPIO_pinConfig.pin_mode==GPIO_MODE_ALTERNATE){
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	795b      	ldrb	r3, [r3, #5]
 8000662:	2b02      	cmp	r3, #2
 8000664:	d131      	bne.n	80006ca <gpio_init+0x282>

		uint8_t afr_low_high = pGpio_handle->gPIO_pinConfig.pin_number / 8;
 8000666:	687b      	ldr	r3, [r7, #4]
 8000668:	791b      	ldrb	r3, [r3, #4]
 800066a:	08db      	lsrs	r3, r3, #3
 800066c:	72bb      	strb	r3, [r7, #10]
		uint8_t afr_pin_no = pGpio_handle->gPIO_pinConfig.pin_number % 8;
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	791b      	ldrb	r3, [r3, #4]
 8000672:	f003 0307 	and.w	r3, r3, #7
 8000676:	727b      	strb	r3, [r7, #9]

		pGpio_handle->pGpioX->AFR[afr_low_high] &= ~(0X0F<<(4*afr_pin_no)); //  ??????
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	681b      	ldr	r3, [r3, #0]
 800067c:	7aba      	ldrb	r2, [r7, #10]
 800067e:	3208      	adds	r2, #8
 8000680:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000684:	7a7b      	ldrb	r3, [r7, #9]
 8000686:	009b      	lsls	r3, r3, #2
 8000688:	220f      	movs	r2, #15
 800068a:	fa02 f303 	lsl.w	r3, r2, r3
 800068e:	43db      	mvns	r3, r3
 8000690:	4618      	mov	r0, r3
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	7aba      	ldrb	r2, [r7, #10]
 8000698:	4001      	ands	r1, r0
 800069a:	3208      	adds	r2, #8
 800069c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGpio_handle->pGpioX->AFR[afr_low_high] |= (pGpio_handle->gPIO_pinConfig.pin_alternate_function_mode<<(4*afr_pin_no));
 80006a0:	687b      	ldr	r3, [r7, #4]
 80006a2:	681b      	ldr	r3, [r3, #0]
 80006a4:	7aba      	ldrb	r2, [r7, #10]
 80006a6:	3208      	adds	r2, #8
 80006a8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	7a5b      	ldrb	r3, [r3, #9]
 80006b0:	461a      	mov	r2, r3
 80006b2:	7a7b      	ldrb	r3, [r7, #9]
 80006b4:	009b      	lsls	r3, r3, #2
 80006b6:	fa02 f303 	lsl.w	r3, r2, r3
 80006ba:	4618      	mov	r0, r3
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	7aba      	ldrb	r2, [r7, #10]
 80006c2:	4301      	orrs	r1, r0
 80006c4:	3208      	adds	r2, #8
 80006c6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	//bi portun pinine 1 mi 0 mı yazacağız....




}
 80006ca:	bf00      	nop
 80006cc:	3718      	adds	r7, #24
 80006ce:	46bd      	mov	sp, r7
 80006d0:	bd80      	pop	{r7, pc}
 80006d2:	bf00      	nop
 80006d4:	40013c00 	.word	0x40013c00
 80006d8:	40023800 	.word	0x40023800
 80006dc:	40013800 	.word	0x40013800

080006e0 <gpio_writeto_output_pin>:


void  gpio_writeto_output_pin(GPIO_RegDef_t *pGpiox ,uint8_t pin_no, uint8_t val){
 80006e0:	b480      	push	{r7}
 80006e2:	b083      	sub	sp, #12
 80006e4:	af00      	add	r7, sp, #0
 80006e6:	6078      	str	r0, [r7, #4]
 80006e8:	460b      	mov	r3, r1
 80006ea:	70fb      	strb	r3, [r7, #3]
 80006ec:	4613      	mov	r3, r2
 80006ee:	70bb      	strb	r3, [r7, #2]

	if(val==GPIO_PIN_SET)
 80006f0:	78bb      	ldrb	r3, [r7, #2]
 80006f2:	2b01      	cmp	r3, #1
 80006f4:	d109      	bne.n	800070a <gpio_writeto_output_pin+0x2a>
		pGpiox->ODR |= (1u<<pin_no);
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	695a      	ldr	r2, [r3, #20]
 80006fa:	78fb      	ldrb	r3, [r7, #3]
 80006fc:	2101      	movs	r1, #1
 80006fe:	fa01 f303 	lsl.w	r3, r1, r3
 8000702:	431a      	orrs	r2, r3
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	615a      	str	r2, [r3, #20]
	else
		pGpiox->ODR &=~ (1u<<pin_no);


}
 8000708:	e009      	b.n	800071e <gpio_writeto_output_pin+0x3e>
		pGpiox->ODR &=~ (1u<<pin_no);
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	695a      	ldr	r2, [r3, #20]
 800070e:	78fb      	ldrb	r3, [r7, #3]
 8000710:	2101      	movs	r1, #1
 8000712:	fa01 f303 	lsl.w	r3, r1, r3
 8000716:	43db      	mvns	r3, r3
 8000718:	401a      	ands	r2, r3
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	615a      	str	r2, [r3, #20]
}
 800071e:	bf00      	nop
 8000720:	370c      	adds	r7, #12
 8000722:	46bd      	mov	sp, r7
 8000724:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000728:	4770      	bx	lr

0800072a <gpio_toggleto_output_pin>:
	pGpiox->ODR=val; //bitsel olarak değil direk data olarak yazıyoruz.

}


void gpio_toggleto_output_pin(GPIO_RegDef_t *pGpiox ,uint8_t pin_no){
 800072a:	b480      	push	{r7}
 800072c:	b083      	sub	sp, #12
 800072e:	af00      	add	r7, sp, #0
 8000730:	6078      	str	r0, [r7, #4]
 8000732:	460b      	mov	r3, r1
 8000734:	70fb      	strb	r3, [r7, #3]
	pGpiox->ODR ^=(1u<<pin_no);
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	695a      	ldr	r2, [r3, #20]
 800073a:	78fb      	ldrb	r3, [r7, #3]
 800073c:	2101      	movs	r1, #1
 800073e:	fa01 f303 	lsl.w	r3, r1, r3
 8000742:	405a      	eors	r2, r3
 8000744:	687b      	ldr	r3, [r7, #4]
 8000746:	615a      	str	r2, [r3, #20]

}
 8000748:	bf00      	nop
 800074a:	370c      	adds	r7, #12
 800074c:	46bd      	mov	sp, r7
 800074e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000752:	4770      	bx	lr

08000754 <clear_pending_reg>:
	return res!= 0? GPIO_PIN_SET : GPIO_PIN_RESET;
}



void clear_pending_reg(uint8_t pin_no){
 8000754:	b480      	push	{r7}
 8000756:	b083      	sub	sp, #12
 8000758:	af00      	add	r7, sp, #0
 800075a:	4603      	mov	r3, r0
 800075c:	71fb      	strb	r3, [r7, #7]
	//clear PR
	if(EXTI->PR & (1<<pin_no))
 800075e:	4b0c      	ldr	r3, [pc, #48]	; (8000790 <clear_pending_reg+0x3c>)
 8000760:	695b      	ldr	r3, [r3, #20]
 8000762:	79fa      	ldrb	r2, [r7, #7]
 8000764:	2101      	movs	r1, #1
 8000766:	fa01 f202 	lsl.w	r2, r1, r2
 800076a:	4013      	ands	r3, r2
 800076c:	2b00      	cmp	r3, #0
 800076e:	d008      	beq.n	8000782 <clear_pending_reg+0x2e>
		EXTI->PR |= (1U<<pin_no);
 8000770:	4b07      	ldr	r3, [pc, #28]	; (8000790 <clear_pending_reg+0x3c>)
 8000772:	695a      	ldr	r2, [r3, #20]
 8000774:	79fb      	ldrb	r3, [r7, #7]
 8000776:	2101      	movs	r1, #1
 8000778:	fa01 f303 	lsl.w	r3, r1, r3
 800077c:	4904      	ldr	r1, [pc, #16]	; (8000790 <clear_pending_reg+0x3c>)
 800077e:	4313      	orrs	r3, r2
 8000780:	614b      	str	r3, [r1, #20]
}
 8000782:	bf00      	nop
 8000784:	370c      	adds	r7, #12
 8000786:	46bd      	mov	sp, r7
 8000788:	f85d 7b04 	ldr.w	r7, [sp], #4
 800078c:	4770      	bx	lr
 800078e:	bf00      	nop
 8000790:	40013c00 	.word	0x40013c00

08000794 <update_of_7segment>:
			0x07,
			0x7f,
			0x6f
	};

void update_of_7segment(uint8_t number){
 8000794:	b580      	push	{r7, lr}
 8000796:	b082      	sub	sp, #8
 8000798:	af00      	add	r7, sp, #0
 800079a:	4603      	mov	r3, r0
 800079c:	71fb      	strb	r3, [r7, #7]
	gpio_writeto_output_pin(GPIOC,GPIO_PIN_NO_7, ((number>>0)&0x01));
 800079e:	79fb      	ldrb	r3, [r7, #7]
 80007a0:	f003 0301 	and.w	r3, r3, #1
 80007a4:	b2db      	uxtb	r3, r3
 80007a6:	461a      	mov	r2, r3
 80007a8:	2107      	movs	r1, #7
 80007aa:	4824      	ldr	r0, [pc, #144]	; (800083c <update_of_7segment+0xa8>)
 80007ac:	f7ff ff98 	bl	80006e0 <gpio_writeto_output_pin>
	gpio_writeto_output_pin(GPIOC,GPIO_PIN_NO_6, ((number>>1)&0x01));
 80007b0:	79fb      	ldrb	r3, [r7, #7]
 80007b2:	085b      	lsrs	r3, r3, #1
 80007b4:	b2db      	uxtb	r3, r3
 80007b6:	f003 0301 	and.w	r3, r3, #1
 80007ba:	b2db      	uxtb	r3, r3
 80007bc:	461a      	mov	r2, r3
 80007be:	2106      	movs	r1, #6
 80007c0:	481e      	ldr	r0, [pc, #120]	; (800083c <update_of_7segment+0xa8>)
 80007c2:	f7ff ff8d 	bl	80006e0 <gpio_writeto_output_pin>
	gpio_writeto_output_pin(GPIOA,GPIO_PIN_NO_9, ((number>>2)&0x01));
 80007c6:	79fb      	ldrb	r3, [r7, #7]
 80007c8:	089b      	lsrs	r3, r3, #2
 80007ca:	b2db      	uxtb	r3, r3
 80007cc:	f003 0301 	and.w	r3, r3, #1
 80007d0:	b2db      	uxtb	r3, r3
 80007d2:	461a      	mov	r2, r3
 80007d4:	2109      	movs	r1, #9
 80007d6:	481a      	ldr	r0, [pc, #104]	; (8000840 <update_of_7segment+0xac>)
 80007d8:	f7ff ff82 	bl	80006e0 <gpio_writeto_output_pin>
	gpio_writeto_output_pin(GPIOA,GPIO_PIN_NO_10, ((number>>3)&0x01));
 80007dc:	79fb      	ldrb	r3, [r7, #7]
 80007de:	08db      	lsrs	r3, r3, #3
 80007e0:	b2db      	uxtb	r3, r3
 80007e2:	f003 0301 	and.w	r3, r3, #1
 80007e6:	b2db      	uxtb	r3, r3
 80007e8:	461a      	mov	r2, r3
 80007ea:	210a      	movs	r1, #10
 80007ec:	4814      	ldr	r0, [pc, #80]	; (8000840 <update_of_7segment+0xac>)
 80007ee:	f7ff ff77 	bl	80006e0 <gpio_writeto_output_pin>
	gpio_writeto_output_pin(GPIOA,GPIO_PIN_NO_8, ((number>>4)&0x01));
 80007f2:	79fb      	ldrb	r3, [r7, #7]
 80007f4:	091b      	lsrs	r3, r3, #4
 80007f6:	b2db      	uxtb	r3, r3
 80007f8:	f003 0301 	and.w	r3, r3, #1
 80007fc:	b2db      	uxtb	r3, r3
 80007fe:	461a      	mov	r2, r3
 8000800:	2108      	movs	r1, #8
 8000802:	480f      	ldr	r0, [pc, #60]	; (8000840 <update_of_7segment+0xac>)
 8000804:	f7ff ff6c 	bl	80006e0 <gpio_writeto_output_pin>
	gpio_writeto_output_pin(GPIOC,GPIO_PIN_NO_9, ((number>>5)&0x01));
 8000808:	79fb      	ldrb	r3, [r7, #7]
 800080a:	095b      	lsrs	r3, r3, #5
 800080c:	b2db      	uxtb	r3, r3
 800080e:	f003 0301 	and.w	r3, r3, #1
 8000812:	b2db      	uxtb	r3, r3
 8000814:	461a      	mov	r2, r3
 8000816:	2109      	movs	r1, #9
 8000818:	4808      	ldr	r0, [pc, #32]	; (800083c <update_of_7segment+0xa8>)
 800081a:	f7ff ff61 	bl	80006e0 <gpio_writeto_output_pin>
	gpio_writeto_output_pin(GPIOC,GPIO_PIN_NO_8,((number>>6)&0x01));
 800081e:	79fb      	ldrb	r3, [r7, #7]
 8000820:	099b      	lsrs	r3, r3, #6
 8000822:	b2db      	uxtb	r3, r3
 8000824:	f003 0301 	and.w	r3, r3, #1
 8000828:	b2db      	uxtb	r3, r3
 800082a:	461a      	mov	r2, r3
 800082c:	2108      	movs	r1, #8
 800082e:	4803      	ldr	r0, [pc, #12]	; (800083c <update_of_7segment+0xa8>)
 8000830:	f7ff ff56 	bl	80006e0 <gpio_writeto_output_pin>
}
 8000834:	bf00      	nop
 8000836:	3708      	adds	r7, #8
 8000838:	46bd      	mov	sp, r7
 800083a:	bd80      	pop	{r7, pc}
 800083c:	40020800 	.word	0x40020800
 8000840:	40020000 	.word	0x40020000

08000844 <SysTick_Handler>:


void SysTick_Handler(){
 8000844:	b480      	push	{r7}
 8000846:	af00      	add	r7, sp, #0
	++tmTickCount;
 8000848:	4b04      	ldr	r3, [pc, #16]	; (800085c <SysTick_Handler+0x18>)
 800084a:	681b      	ldr	r3, [r3, #0]
 800084c:	3301      	adds	r3, #1
 800084e:	4a03      	ldr	r2, [pc, #12]	; (800085c <SysTick_Handler+0x18>)
 8000850:	6013      	str	r3, [r2, #0]
	//gpio_toggleto_output_pin(GPIOD, GPIO_PIN_NO_14);////////////
}
 8000852:	bf00      	nop
 8000854:	46bd      	mov	sp, r7
 8000856:	f85d 7b04 	ldr.w	r7, [sp], #4
 800085a:	4770      	bx	lr
 800085c:	20000028 	.word	0x20000028

08000860 <EXTI0_IRQHandler>:

void EXTI0_IRQHandler(void){
 8000860:	b580      	push	{r7, lr}
 8000862:	af00      	add	r7, sp, #0

	static int inTimeOld;
	clear_pending_reg(GPIO_PIN_NO_0);
 8000864:	2000      	movs	r0, #0
 8000866:	f7ff ff75 	bl	8000754 <clear_pending_reg>
	if(tmTickCount-inTimeOld>=3){
 800086a:	4b19      	ldr	r3, [pc, #100]	; (80008d0 <EXTI0_IRQHandler+0x70>)
 800086c:	681a      	ldr	r2, [r3, #0]
 800086e:	4b19      	ldr	r3, [pc, #100]	; (80008d4 <EXTI0_IRQHandler+0x74>)
 8000870:	681b      	ldr	r3, [r3, #0]
 8000872:	1ad3      	subs	r3, r2, r3
 8000874:	2b02      	cmp	r3, #2
 8000876:	dd29      	ble.n	80008cc <EXTI0_IRQHandler+0x6c>
		gpio_toggleto_output_pin(GPIOD, GPIO_PIN_NO_15);////////////
 8000878:	210f      	movs	r1, #15
 800087a:	4817      	ldr	r0, [pc, #92]	; (80008d8 <EXTI0_IRQHandler+0x78>)
 800087c:	f7ff ff55 	bl	800072a <gpio_toggleto_output_pin>
		inTimeOld=tmTickCount;
 8000880:	4b13      	ldr	r3, [pc, #76]	; (80008d0 <EXTI0_IRQHandler+0x70>)
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	4a13      	ldr	r2, [pc, #76]	; (80008d4 <EXTI0_IRQHandler+0x74>)
 8000886:	6013      	str	r3, [r2, #0]
		if(nmbr<9){
 8000888:	4b14      	ldr	r3, [pc, #80]	; (80008dc <EXTI0_IRQHandler+0x7c>)
 800088a:	f993 3000 	ldrsb.w	r3, [r3]
 800088e:	2b08      	cmp	r3, #8
 8000890:	dc1c      	bgt.n	80008cc <EXTI0_IRQHandler+0x6c>
			nmbr++;
 8000892:	4b12      	ldr	r3, [pc, #72]	; (80008dc <EXTI0_IRQHandler+0x7c>)
 8000894:	f993 3000 	ldrsb.w	r3, [r3]
 8000898:	b2db      	uxtb	r3, r3
 800089a:	3301      	adds	r3, #1
 800089c:	b2db      	uxtb	r3, r3
 800089e:	b25a      	sxtb	r2, r3
 80008a0:	4b0e      	ldr	r3, [pc, #56]	; (80008dc <EXTI0_IRQHandler+0x7c>)
 80008a2:	701a      	strb	r2, [r3, #0]
			update_of_7segment(numbers_of_7segment[nmbr]);
 80008a4:	4b0d      	ldr	r3, [pc, #52]	; (80008dc <EXTI0_IRQHandler+0x7c>)
 80008a6:	f993 3000 	ldrsb.w	r3, [r3]
 80008aa:	461a      	mov	r2, r3
 80008ac:	4b0c      	ldr	r3, [pc, #48]	; (80008e0 <EXTI0_IRQHandler+0x80>)
 80008ae:	5c9b      	ldrb	r3, [r3, r2]
 80008b0:	4618      	mov	r0, r3
 80008b2:	f7ff ff6f 	bl	8000794 <update_of_7segment>
			TIMER2->CCR1 = nmbr*2222;
 80008b6:	4b09      	ldr	r3, [pc, #36]	; (80008dc <EXTI0_IRQHandler+0x7c>)
 80008b8:	f993 3000 	ldrsb.w	r3, [r3]
 80008bc:	461a      	mov	r2, r3
 80008be:	f640 03ae 	movw	r3, #2222	; 0x8ae
 80008c2:	fb03 f202 	mul.w	r2, r3, r2
 80008c6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80008ca:	635a      	str	r2, [r3, #52]	; 0x34
		}
	}
}
 80008cc:	bf00      	nop
 80008ce:	bd80      	pop	{r7, pc}
 80008d0:	20000028 	.word	0x20000028
 80008d4:	20000030 	.word	0x20000030
 80008d8:	40020c00 	.word	0x40020c00
 80008dc:	2000002c 	.word	0x2000002c
 80008e0:	20000000 	.word	0x20000000

080008e4 <EXTI1_IRQHandler>:

void EXTI1_IRQHandler(void){
 80008e4:	b580      	push	{r7, lr}
 80008e6:	af00      	add	r7, sp, #0

	static int inTimeOld;
	clear_pending_reg(GPIO_PIN_NO_1);
 80008e8:	2001      	movs	r0, #1
 80008ea:	f7ff ff33 	bl	8000754 <clear_pending_reg>
	if(tmTickCount-inTimeOld>=3){
 80008ee:	4b19      	ldr	r3, [pc, #100]	; (8000954 <EXTI1_IRQHandler+0x70>)
 80008f0:	681a      	ldr	r2, [r3, #0]
 80008f2:	4b19      	ldr	r3, [pc, #100]	; (8000958 <EXTI1_IRQHandler+0x74>)
 80008f4:	681b      	ldr	r3, [r3, #0]
 80008f6:	1ad3      	subs	r3, r2, r3
 80008f8:	2b02      	cmp	r3, #2
 80008fa:	dd29      	ble.n	8000950 <EXTI1_IRQHandler+0x6c>
		gpio_toggleto_output_pin(GPIOD, GPIO_PIN_NO_15);////////////
 80008fc:	210f      	movs	r1, #15
 80008fe:	4817      	ldr	r0, [pc, #92]	; (800095c <EXTI1_IRQHandler+0x78>)
 8000900:	f7ff ff13 	bl	800072a <gpio_toggleto_output_pin>
		inTimeOld=tmTickCount;
 8000904:	4b13      	ldr	r3, [pc, #76]	; (8000954 <EXTI1_IRQHandler+0x70>)
 8000906:	681b      	ldr	r3, [r3, #0]
 8000908:	4a13      	ldr	r2, [pc, #76]	; (8000958 <EXTI1_IRQHandler+0x74>)
 800090a:	6013      	str	r3, [r2, #0]
		if(nmbr>0){
 800090c:	4b14      	ldr	r3, [pc, #80]	; (8000960 <EXTI1_IRQHandler+0x7c>)
 800090e:	f993 3000 	ldrsb.w	r3, [r3]
 8000912:	2b00      	cmp	r3, #0
 8000914:	dd1c      	ble.n	8000950 <EXTI1_IRQHandler+0x6c>
			nmbr--;
 8000916:	4b12      	ldr	r3, [pc, #72]	; (8000960 <EXTI1_IRQHandler+0x7c>)
 8000918:	f993 3000 	ldrsb.w	r3, [r3]
 800091c:	b2db      	uxtb	r3, r3
 800091e:	3b01      	subs	r3, #1
 8000920:	b2db      	uxtb	r3, r3
 8000922:	b25a      	sxtb	r2, r3
 8000924:	4b0e      	ldr	r3, [pc, #56]	; (8000960 <EXTI1_IRQHandler+0x7c>)
 8000926:	701a      	strb	r2, [r3, #0]
			update_of_7segment(numbers_of_7segment[nmbr]);
 8000928:	4b0d      	ldr	r3, [pc, #52]	; (8000960 <EXTI1_IRQHandler+0x7c>)
 800092a:	f993 3000 	ldrsb.w	r3, [r3]
 800092e:	461a      	mov	r2, r3
 8000930:	4b0c      	ldr	r3, [pc, #48]	; (8000964 <EXTI1_IRQHandler+0x80>)
 8000932:	5c9b      	ldrb	r3, [r3, r2]
 8000934:	4618      	mov	r0, r3
 8000936:	f7ff ff2d 	bl	8000794 <update_of_7segment>
			TIMER2->CCR1 = nmbr*2222;
 800093a:	4b09      	ldr	r3, [pc, #36]	; (8000960 <EXTI1_IRQHandler+0x7c>)
 800093c:	f993 3000 	ldrsb.w	r3, [r3]
 8000940:	461a      	mov	r2, r3
 8000942:	f640 03ae 	movw	r3, #2222	; 0x8ae
 8000946:	fb03 f202 	mul.w	r2, r3, r2
 800094a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800094e:	635a      	str	r2, [r3, #52]	; 0x34
		}
	}
}
 8000950:	bf00      	nop
 8000952:	bd80      	pop	{r7, pc}
 8000954:	20000028 	.word	0x20000028
 8000958:	20000034 	.word	0x20000034
 800095c:	40020c00 	.word	0x40020c00
 8000960:	2000002c 	.word	0x2000002c
 8000964:	20000000 	.word	0x20000000

08000968 <GPIO_Init>:





void GPIO_Init(){
 8000968:	b480      	push	{r7}
 800096a:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= 1; //Enable GPIOA clock
 800096c:	4b0b      	ldr	r3, [pc, #44]	; (800099c <GPIO_Init+0x34>)
 800096e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000970:	4a0a      	ldr	r2, [pc, #40]	; (800099c <GPIO_Init+0x34>)
 8000972:	f043 0301 	orr.w	r3, r3, #1
 8000976:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOA->AFR[0] |= 0x00100000; // Select the PA5 pin in alternate function mode
 8000978:	4b09      	ldr	r3, [pc, #36]	; (80009a0 <GPIO_Init+0x38>)
 800097a:	6a1b      	ldr	r3, [r3, #32]
 800097c:	4a08      	ldr	r2, [pc, #32]	; (80009a0 <GPIO_Init+0x38>)
 800097e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000982:	6213      	str	r3, [r2, #32]
	GPIOA->MODER |= 0x00000800; //Set the PA5 pin alternate function
 8000984:	4b06      	ldr	r3, [pc, #24]	; (80009a0 <GPIO_Init+0x38>)
 8000986:	681b      	ldr	r3, [r3, #0]
 8000988:	4a05      	ldr	r2, [pc, #20]	; (80009a0 <GPIO_Init+0x38>)
 800098a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800098e:	6013      	str	r3, [r2, #0]
}
 8000990:	bf00      	nop
 8000992:	46bd      	mov	sp, r7
 8000994:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000998:	4770      	bx	lr
 800099a:	bf00      	nop
 800099c:	40023800 	.word	0x40023800
 80009a0:	40020000 	.word	0x40020000

080009a4 <TIM2_Init>:

void TIM2_Init(){
 80009a4:	b480      	push	{r7}
 80009a6:	af00      	add	r7, sp, #0
	RCC->APB1ENR |=1;
 80009a8:	4b14      	ldr	r3, [pc, #80]	; (80009fc <TIM2_Init+0x58>)
 80009aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80009ac:	4a13      	ldr	r2, [pc, #76]	; (80009fc <TIM2_Init+0x58>)
 80009ae:	f043 0301 	orr.w	r3, r3, #1
 80009b2:	6413      	str	r3, [r2, #64]	; 0x40
	TIMER2->PSC = 16-1; //Setting the clock frequency to 1MHz.
 80009b4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80009b8:	220f      	movs	r2, #15
 80009ba:	629a      	str	r2, [r3, #40]	; 0x28
	TIMER2->ARR = 20000-1; // Total period of the timer
 80009bc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80009c0:	f644 621f 	movw	r2, #19999	; 0x4e1f
 80009c4:	62da      	str	r2, [r3, #44]	; 0x2c
	TIMER2->CNT = 0;
 80009c6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80009ca:	2200      	movs	r2, #0
 80009cc:	625a      	str	r2, [r3, #36]	; 0x24
	TIMER2->CCMR1 = 0x0060; //PWM mode for the timer
 80009ce:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80009d2:	2260      	movs	r2, #96	; 0x60
 80009d4:	619a      	str	r2, [r3, #24]
	TIMER2->CCER |= 1; //Enable channel 1 as output
 80009d6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80009da:	6a1b      	ldr	r3, [r3, #32]
 80009dc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80009e0:	f043 0301 	orr.w	r3, r3, #1
 80009e4:	6213      	str	r3, [r2, #32]
	TIMER2->CCR1 = 500; // Pulse width for PWM
 80009e6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80009ea:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 80009ee:	635a      	str	r2, [r3, #52]	; 0x34
}
 80009f0:	bf00      	nop
 80009f2:	46bd      	mov	sp, r7
 80009f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009f8:	4770      	bx	lr
 80009fa:	bf00      	nop
 80009fc:	40023800 	.word	0x40023800

08000a00 <main>:
	TIMER4->CR1 |= 1; //Start the Timer
	while(!(TIMER4->SR & (0x1UL << (0U)))){} //Polling the update interrupt flag
	TIMER4->SR &= ~(0x0001); //Reset the update interrupt flag
}

int main(){
 8000a00:	b580      	push	{r7, lr}
 8000a02:	b0a2      	sub	sp, #136	; 0x88
 8000a04:	af00      	add	r7, sp, #0

	GPIO_Handle_t blue ={GPIOD,{GPIO_PIN_NO_15,GPIO_MODE_OUT,GPIO_SPEED_MEDIUM,GPIO_OTYPE_PP,GPIO_NO_PUPD}};
 8000a06:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 8000a0a:	2200      	movs	r2, #0
 8000a0c:	601a      	str	r2, [r3, #0]
 8000a0e:	605a      	str	r2, [r3, #4]
 8000a10:	609a      	str	r2, [r3, #8]
 8000a12:	4b80      	ldr	r3, [pc, #512]	; (8000c14 <main+0x214>)
 8000a14:	67fb      	str	r3, [r7, #124]	; 0x7c
 8000a16:	230f      	movs	r3, #15
 8000a18:	f887 3080 	strb.w	r3, [r7, #128]	; 0x80
 8000a1c:	2301      	movs	r3, #1
 8000a1e:	f887 3081 	strb.w	r3, [r7, #129]	; 0x81
 8000a22:	2301      	movs	r3, #1
 8000a24:	f887 3082 	strb.w	r3, [r7, #130]	; 0x82
	gpio_init(&blue);
 8000a28:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 8000a2c:	4618      	mov	r0, r3
 8000a2e:	f7ff fd0b 	bl	8000448 <gpio_init>
	GPIO_Handle_t red ={GPIOD,{GPIO_PIN_NO_14,GPIO_MODE_OUT,GPIO_SPEED_MEDIUM,GPIO_OTYPE_PP,GPIO_NO_PUPD}};
 8000a32:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8000a36:	2200      	movs	r2, #0
 8000a38:	601a      	str	r2, [r3, #0]
 8000a3a:	605a      	str	r2, [r3, #4]
 8000a3c:	609a      	str	r2, [r3, #8]
 8000a3e:	4b75      	ldr	r3, [pc, #468]	; (8000c14 <main+0x214>)
 8000a40:	673b      	str	r3, [r7, #112]	; 0x70
 8000a42:	230e      	movs	r3, #14
 8000a44:	f887 3074 	strb.w	r3, [r7, #116]	; 0x74
 8000a48:	2301      	movs	r3, #1
 8000a4a:	f887 3075 	strb.w	r3, [r7, #117]	; 0x75
 8000a4e:	2301      	movs	r3, #1
 8000a50:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
	gpio_init(&red);
 8000a54:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8000a58:	4618      	mov	r0, r3
 8000a5a:	f7ff fcf5 	bl	8000448 <gpio_init>

	GPIO_Handle_t gpioA_7segmentA ={GPIOC,{GPIO_PIN_NO_7,GPIO_MODE_OUT,GPIO_SPEED_MEDIUM,GPIO_OTYPE_PP,GPIO_NO_PUPD}};
 8000a5e:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8000a62:	2200      	movs	r2, #0
 8000a64:	601a      	str	r2, [r3, #0]
 8000a66:	605a      	str	r2, [r3, #4]
 8000a68:	609a      	str	r2, [r3, #8]
 8000a6a:	4b6b      	ldr	r3, [pc, #428]	; (8000c18 <main+0x218>)
 8000a6c:	667b      	str	r3, [r7, #100]	; 0x64
 8000a6e:	2307      	movs	r3, #7
 8000a70:	f887 3068 	strb.w	r3, [r7, #104]	; 0x68
 8000a74:	2301      	movs	r3, #1
 8000a76:	f887 3069 	strb.w	r3, [r7, #105]	; 0x69
 8000a7a:	2301      	movs	r3, #1
 8000a7c:	f887 306a 	strb.w	r3, [r7, #106]	; 0x6a
	GPIO_Handle_t gpioA_7segmentB ={GPIOC,{GPIO_PIN_NO_6,GPIO_MODE_OUT,GPIO_SPEED_MEDIUM,GPIO_OTYPE_PP,GPIO_NO_PUPD}};
 8000a80:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8000a84:	2200      	movs	r2, #0
 8000a86:	601a      	str	r2, [r3, #0]
 8000a88:	605a      	str	r2, [r3, #4]
 8000a8a:	609a      	str	r2, [r3, #8]
 8000a8c:	4b62      	ldr	r3, [pc, #392]	; (8000c18 <main+0x218>)
 8000a8e:	65bb      	str	r3, [r7, #88]	; 0x58
 8000a90:	2306      	movs	r3, #6
 8000a92:	f887 305c 	strb.w	r3, [r7, #92]	; 0x5c
 8000a96:	2301      	movs	r3, #1
 8000a98:	f887 305d 	strb.w	r3, [r7, #93]	; 0x5d
 8000a9c:	2301      	movs	r3, #1
 8000a9e:	f887 305e 	strb.w	r3, [r7, #94]	; 0x5e
	GPIO_Handle_t gpioA_7segmentC ={GPIOA,{GPIO_PIN_NO_9,GPIO_MODE_OUT,GPIO_SPEED_MEDIUM,GPIO_OTYPE_PP,GPIO_NO_PUPD}};
 8000aa2:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8000aa6:	2200      	movs	r2, #0
 8000aa8:	601a      	str	r2, [r3, #0]
 8000aaa:	605a      	str	r2, [r3, #4]
 8000aac:	609a      	str	r2, [r3, #8]
 8000aae:	4b5b      	ldr	r3, [pc, #364]	; (8000c1c <main+0x21c>)
 8000ab0:	64fb      	str	r3, [r7, #76]	; 0x4c
 8000ab2:	2309      	movs	r3, #9
 8000ab4:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 8000ab8:	2301      	movs	r3, #1
 8000aba:	f887 3051 	strb.w	r3, [r7, #81]	; 0x51
 8000abe:	2301      	movs	r3, #1
 8000ac0:	f887 3052 	strb.w	r3, [r7, #82]	; 0x52
	GPIO_Handle_t gpioA_7segmentD ={GPIOA,{GPIO_PIN_NO_10,GPIO_MODE_OUT,GPIO_SPEED_MEDIUM,GPIO_OTYPE_PP,GPIO_NO_PUPD}};
 8000ac4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8000ac8:	2200      	movs	r2, #0
 8000aca:	601a      	str	r2, [r3, #0]
 8000acc:	605a      	str	r2, [r3, #4]
 8000ace:	609a      	str	r2, [r3, #8]
 8000ad0:	4b52      	ldr	r3, [pc, #328]	; (8000c1c <main+0x21c>)
 8000ad2:	643b      	str	r3, [r7, #64]	; 0x40
 8000ad4:	230a      	movs	r3, #10
 8000ad6:	f887 3044 	strb.w	r3, [r7, #68]	; 0x44
 8000ada:	2301      	movs	r3, #1
 8000adc:	f887 3045 	strb.w	r3, [r7, #69]	; 0x45
 8000ae0:	2301      	movs	r3, #1
 8000ae2:	f887 3046 	strb.w	r3, [r7, #70]	; 0x46
	GPIO_Handle_t gpioA_7segmentE ={GPIOA,{GPIO_PIN_NO_8,GPIO_MODE_OUT,GPIO_SPEED_MEDIUM,GPIO_OTYPE_PP,GPIO_NO_PUPD}};
 8000ae6:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8000aea:	2200      	movs	r2, #0
 8000aec:	601a      	str	r2, [r3, #0]
 8000aee:	605a      	str	r2, [r3, #4]
 8000af0:	609a      	str	r2, [r3, #8]
 8000af2:	4b4a      	ldr	r3, [pc, #296]	; (8000c1c <main+0x21c>)
 8000af4:	637b      	str	r3, [r7, #52]	; 0x34
 8000af6:	2308      	movs	r3, #8
 8000af8:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
 8000afc:	2301      	movs	r3, #1
 8000afe:	f887 3039 	strb.w	r3, [r7, #57]	; 0x39
 8000b02:	2301      	movs	r3, #1
 8000b04:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
	GPIO_Handle_t gpioA_7segmentF ={GPIOC,{GPIO_PIN_NO_9,GPIO_MODE_OUT,GPIO_SPEED_MEDIUM,GPIO_OTYPE_PP,GPIO_NO_PUPD}};
 8000b08:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000b0c:	2200      	movs	r2, #0
 8000b0e:	601a      	str	r2, [r3, #0]
 8000b10:	605a      	str	r2, [r3, #4]
 8000b12:	609a      	str	r2, [r3, #8]
 8000b14:	4b40      	ldr	r3, [pc, #256]	; (8000c18 <main+0x218>)
 8000b16:	62bb      	str	r3, [r7, #40]	; 0x28
 8000b18:	2309      	movs	r3, #9
 8000b1a:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 8000b1e:	2301      	movs	r3, #1
 8000b20:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 8000b24:	2301      	movs	r3, #1
 8000b26:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
	GPIO_Handle_t gpioA_7segmentG ={GPIOC,{GPIO_PIN_NO_8,GPIO_MODE_OUT,GPIO_SPEED_MEDIUM,GPIO_OTYPE_PP,GPIO_NO_PUPD}};
 8000b2a:	f107 031c 	add.w	r3, r7, #28
 8000b2e:	2200      	movs	r2, #0
 8000b30:	601a      	str	r2, [r3, #0]
 8000b32:	605a      	str	r2, [r3, #4]
 8000b34:	609a      	str	r2, [r3, #8]
 8000b36:	4b38      	ldr	r3, [pc, #224]	; (8000c18 <main+0x218>)
 8000b38:	61fb      	str	r3, [r7, #28]
 8000b3a:	2308      	movs	r3, #8
 8000b3c:	f887 3020 	strb.w	r3, [r7, #32]
 8000b40:	2301      	movs	r3, #1
 8000b42:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
 8000b46:	2301      	movs	r3, #1
 8000b48:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22

	gpio_init(&gpioA_7segmentA);
 8000b4c:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8000b50:	4618      	mov	r0, r3
 8000b52:	f7ff fc79 	bl	8000448 <gpio_init>
	gpio_init(&gpioA_7segmentB);
 8000b56:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8000b5a:	4618      	mov	r0, r3
 8000b5c:	f7ff fc74 	bl	8000448 <gpio_init>
	gpio_init(&gpioA_7segmentC);
 8000b60:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8000b64:	4618      	mov	r0, r3
 8000b66:	f7ff fc6f 	bl	8000448 <gpio_init>
	gpio_init(&gpioA_7segmentD);
 8000b6a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8000b6e:	4618      	mov	r0, r3
 8000b70:	f7ff fc6a 	bl	8000448 <gpio_init>
	gpio_init(&gpioA_7segmentE);
 8000b74:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8000b78:	4618      	mov	r0, r3
 8000b7a:	f7ff fc65 	bl	8000448 <gpio_init>
	gpio_init(&gpioA_7segmentF);
 8000b7e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000b82:	4618      	mov	r0, r3
 8000b84:	f7ff fc60 	bl	8000448 <gpio_init>
	gpio_init(&gpioA_7segmentG);
 8000b88:	f107 031c 	add.w	r3, r7, #28
 8000b8c:	4618      	mov	r0, r3
 8000b8e:	f7ff fc5b 	bl	8000448 <gpio_init>

	GPIO_Handle_t Gpio_pd_btn_up={GPIOB,{GPIO_PIN_NO_0,GPIO_MODE_RE_IT,0,0,GPIO_NO_PUPD}};
 8000b92:	f107 0310 	add.w	r3, r7, #16
 8000b96:	2200      	movs	r2, #0
 8000b98:	601a      	str	r2, [r3, #0]
 8000b9a:	605a      	str	r2, [r3, #4]
 8000b9c:	609a      	str	r2, [r3, #8]
 8000b9e:	4b20      	ldr	r3, [pc, #128]	; (8000c20 <main+0x220>)
 8000ba0:	613b      	str	r3, [r7, #16]
 8000ba2:	2305      	movs	r3, #5
 8000ba4:	757b      	strb	r3, [r7, #21]
	GPIO_Handle_t Gpio_pd_btn_down={GPIOB,{GPIO_PIN_NO_1,GPIO_MODE_RE_IT,0,0,GPIO_NO_PUPD}};
 8000ba6:	1d3b      	adds	r3, r7, #4
 8000ba8:	2200      	movs	r2, #0
 8000baa:	601a      	str	r2, [r3, #0]
 8000bac:	605a      	str	r2, [r3, #4]
 8000bae:	609a      	str	r2, [r3, #8]
 8000bb0:	4b1b      	ldr	r3, [pc, #108]	; (8000c20 <main+0x220>)
 8000bb2:	607b      	str	r3, [r7, #4]
 8000bb4:	2301      	movs	r3, #1
 8000bb6:	723b      	strb	r3, [r7, #8]
 8000bb8:	2305      	movs	r3, #5
 8000bba:	727b      	strb	r3, [r7, #9]

	gpio_init(&Gpio_pd_btn_up);
 8000bbc:	f107 0310 	add.w	r3, r7, #16
 8000bc0:	4618      	mov	r0, r3
 8000bc2:	f7ff fc41 	bl	8000448 <gpio_init>
	gpio_init(&Gpio_pd_btn_down);
 8000bc6:	1d3b      	adds	r3, r7, #4
 8000bc8:	4618      	mov	r0, r3
 8000bca:	f7ff fc3d 	bl	8000448 <gpio_init>

	nvic_irqno_enable(IRQ_EXTI0);
 8000bce:	2006      	movs	r0, #6
 8000bd0:	f7ff fb0a 	bl	80001e8 <nvic_irqno_enable>
	nvic_irqno_enable(IRQ_EXTI1);
 8000bd4:	2007      	movs	r0, #7
 8000bd6:	f7ff fb07 	bl	80001e8 <nvic_irqno_enable>

	systick_config(SYSTEM_FREQ/10);
 8000bda:	4812      	ldr	r0, [pc, #72]	; (8000c24 <main+0x224>)
 8000bdc:	f7ff fb3c 	bl	8000258 <systick_config>


	RCC->CFGR |= 0<<10; // set APB1 = 16 MHz
 8000be0:	4b11      	ldr	r3, [pc, #68]	; (8000c28 <main+0x228>)
 8000be2:	4a11      	ldr	r2, [pc, #68]	; (8000c28 <main+0x228>)
 8000be4:	689b      	ldr	r3, [r3, #8]
 8000be6:	6093      	str	r3, [r2, #8]
	GPIO_Init();
 8000be8:	f7ff febe 	bl	8000968 <GPIO_Init>
	TIM2_Init();
 8000bec:	f7ff feda 	bl	80009a4 <TIM2_Init>
	TIMER2->CR1 |= 1;
 8000bf0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000bf4:	681b      	ldr	r3, [r3, #0]
 8000bf6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000bfa:	f043 0301 	orr.w	r3, r3, #1
 8000bfe:	6013      	str	r3, [r2, #0]

	update_of_7segment(numbers_of_7segment[nmbr]);
 8000c00:	4b0a      	ldr	r3, [pc, #40]	; (8000c2c <main+0x22c>)
 8000c02:	f993 3000 	ldrsb.w	r3, [r3]
 8000c06:	461a      	mov	r2, r3
 8000c08:	4b09      	ldr	r3, [pc, #36]	; (8000c30 <main+0x230>)
 8000c0a:	5c9b      	ldrb	r3, [r3, r2]
 8000c0c:	4618      	mov	r0, r3
 8000c0e:	f7ff fdc1 	bl	8000794 <update_of_7segment>

	while(1){
 8000c12:	e7fe      	b.n	8000c12 <main+0x212>
 8000c14:	40020c00 	.word	0x40020c00
 8000c18:	40020800 	.word	0x40020800
 8000c1c:	40020000 	.word	0x40020000
 8000c20:	40020400 	.word	0x40020400
 8000c24:	00186a00 	.word	0x00186a00
 8000c28:	40023800 	.word	0x40023800
 8000c2c:	2000002c 	.word	0x2000002c
 8000c30:	20000000 	.word	0x20000000

08000c34 <TIM6_DAC_IRQHandler>:
	nvic_irqno_enable(IRQ_TIM6_DAC);
}



void TIM6_DAC_IRQHandler(){
 8000c34:	b580      	push	{r7, lr}
 8000c36:	af00      	add	r7, sp, #0
	static int a =0;
	++a;
 8000c38:	4b08      	ldr	r3, [pc, #32]	; (8000c5c <TIM6_DAC_IRQHandler+0x28>)
 8000c3a:	681b      	ldr	r3, [r3, #0]
 8000c3c:	3301      	adds	r3, #1
 8000c3e:	4a07      	ldr	r2, [pc, #28]	; (8000c5c <TIM6_DAC_IRQHandler+0x28>)
 8000c40:	6013      	str	r3, [r2, #0]
	gpio_toggleto_output_pin(GPIOD, GPIO_PIN_NO_14);
 8000c42:	210e      	movs	r1, #14
 8000c44:	4806      	ldr	r0, [pc, #24]	; (8000c60 <TIM6_DAC_IRQHandler+0x2c>)
 8000c46:	f7ff fd70 	bl	800072a <gpio_toggleto_output_pin>
	//TIMER6->SR &= ~(1U<<0);
	Clear_IT_PendingBit(); //makro
 8000c4a:	4b06      	ldr	r3, [pc, #24]	; (8000c64 <TIM6_DAC_IRQHandler+0x30>)
 8000c4c:	691b      	ldr	r3, [r3, #16]
 8000c4e:	4a05      	ldr	r2, [pc, #20]	; (8000c64 <TIM6_DAC_IRQHandler+0x30>)
 8000c50:	f023 0301 	bic.w	r3, r3, #1
 8000c54:	6113      	str	r3, [r2, #16]

}
 8000c56:	bf00      	nop
 8000c58:	bd80      	pop	{r7, pc}
 8000c5a:	bf00      	nop
 8000c5c:	20000038 	.word	0x20000038
 8000c60:	40020c00 	.word	0x40020c00
 8000c64:	40001000 	.word	0x40001000

08000c68 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000c68:	480d      	ldr	r0, [pc, #52]	; (8000ca0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000c6a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000c6c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000c70:	480c      	ldr	r0, [pc, #48]	; (8000ca4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000c72:	490d      	ldr	r1, [pc, #52]	; (8000ca8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000c74:	4a0d      	ldr	r2, [pc, #52]	; (8000cac <LoopForever+0xe>)
  movs r3, #0
 8000c76:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000c78:	e002      	b.n	8000c80 <LoopCopyDataInit>

08000c7a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000c7a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000c7c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000c7e:	3304      	adds	r3, #4

08000c80 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000c80:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000c82:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000c84:	d3f9      	bcc.n	8000c7a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000c86:	4a0a      	ldr	r2, [pc, #40]	; (8000cb0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000c88:	4c0a      	ldr	r4, [pc, #40]	; (8000cb4 <LoopForever+0x16>)
  movs r3, #0
 8000c8a:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000c8c:	e001      	b.n	8000c92 <LoopFillZerobss>

08000c8e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000c8e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000c90:	3204      	adds	r2, #4

08000c92 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000c92:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000c94:	d3fb      	bcc.n	8000c8e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000c96:	f000 f811 	bl	8000cbc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000c9a:	f7ff feb1 	bl	8000a00 <main>

08000c9e <LoopForever>:

LoopForever:
    b LoopForever
 8000c9e:	e7fe      	b.n	8000c9e <LoopForever>
  ldr   r0, =_estack
 8000ca0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000ca4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000ca8:	2000000c 	.word	0x2000000c
  ldr r2, =_sidata
 8000cac:	08000d24 	.word	0x08000d24
  ldr r2, =_sbss
 8000cb0:	2000000c 	.word	0x2000000c
  ldr r4, =_ebss
 8000cb4:	2000003c 	.word	0x2000003c

08000cb8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000cb8:	e7fe      	b.n	8000cb8 <ADC_IRQHandler>
	...

08000cbc <__libc_init_array>:
 8000cbc:	b570      	push	{r4, r5, r6, lr}
 8000cbe:	4d0d      	ldr	r5, [pc, #52]	; (8000cf4 <__libc_init_array+0x38>)
 8000cc0:	4c0d      	ldr	r4, [pc, #52]	; (8000cf8 <__libc_init_array+0x3c>)
 8000cc2:	1b64      	subs	r4, r4, r5
 8000cc4:	10a4      	asrs	r4, r4, #2
 8000cc6:	2600      	movs	r6, #0
 8000cc8:	42a6      	cmp	r6, r4
 8000cca:	d109      	bne.n	8000ce0 <__libc_init_array+0x24>
 8000ccc:	4d0b      	ldr	r5, [pc, #44]	; (8000cfc <__libc_init_array+0x40>)
 8000cce:	4c0c      	ldr	r4, [pc, #48]	; (8000d00 <__libc_init_array+0x44>)
 8000cd0:	f000 f818 	bl	8000d04 <_init>
 8000cd4:	1b64      	subs	r4, r4, r5
 8000cd6:	10a4      	asrs	r4, r4, #2
 8000cd8:	2600      	movs	r6, #0
 8000cda:	42a6      	cmp	r6, r4
 8000cdc:	d105      	bne.n	8000cea <__libc_init_array+0x2e>
 8000cde:	bd70      	pop	{r4, r5, r6, pc}
 8000ce0:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ce4:	4798      	blx	r3
 8000ce6:	3601      	adds	r6, #1
 8000ce8:	e7ee      	b.n	8000cc8 <__libc_init_array+0xc>
 8000cea:	f855 3b04 	ldr.w	r3, [r5], #4
 8000cee:	4798      	blx	r3
 8000cf0:	3601      	adds	r6, #1
 8000cf2:	e7f2      	b.n	8000cda <__libc_init_array+0x1e>
 8000cf4:	08000d1c 	.word	0x08000d1c
 8000cf8:	08000d1c 	.word	0x08000d1c
 8000cfc:	08000d1c 	.word	0x08000d1c
 8000d00:	08000d20 	.word	0x08000d20

08000d04 <_init>:
 8000d04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d06:	bf00      	nop
 8000d08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d0a:	bc08      	pop	{r3}
 8000d0c:	469e      	mov	lr, r3
 8000d0e:	4770      	bx	lr

08000d10 <_fini>:
 8000d10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d12:	bf00      	nop
 8000d14:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d16:	bc08      	pop	{r3}
 8000d18:	469e      	mov	lr, r3
 8000d1a:	4770      	bx	lr
